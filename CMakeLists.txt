cmake_minimum_required(VERSION 3.4.1)
project(hobbes)
set (CMAKE_CXX_STANDARD 11)

# This was generated by llvm-config, should probably use a llvm provided cmake function for this
set(llvm_libs LLVMMCJIT LLVMExecutionEngine LLVMRuntimeDyld LLVMipo LLVMVectorize LLVMX86Disassembler LLVMX86AsmParser LLVMX86CodeGen LLVMX86Desc LLVMX86Info LLVMMCDisassembler LLVMX86AsmPrinter LLVMX86Utils LLVMSelectionDAG LLVMAsmPrinter LLVMCodeGen LLVMTarget LLVMScalarOpts LLVMProfileData LLVMObject LLVMBitReader LLVMInstCombine LLVMInstrumentation LLVMTransformUtils LLVMipa LLVMAnalysis LLVMCore LLVMMCParser LLVMMC LLVMSupport)


message(STATUS "Found LLVM ${LLVM_PACKAGE_VERSION}")
message(STATUS "Using LLVMConfig.cmake in: ${LLVM_DIR}")


set(HOBBES_MAIN_SRC_DIR ${CMAKE_CURRENT_SOURCE_DIR})
set(HOBBES_BINARY_DIR ${CMAKE_CURRENT_BINARY_DIR})
set(HOBBES_MAIN_INCLUDE_DIR ${HOBBES_MAIN_SRC_DIR}/include)
set(HOBBES_INCLUDE_DIR ${HOBBES_BINARY_DIR}/include)

set(CMAKE_INCLUDE_CURRENT_DIR ON)
set(CMAKE_EXPORT_COMPILE_COMMANDS 1)

set(CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake)


include(CodeCoverage)
setup_target_for_coverage(${PROJECT_NAME}_coverage hobbes-test coverage)

option(BUILD_LLVM "Build LLVM from source" OFF)
option(ENABLE_CODE_COVERAGE "Enable code coverage" ON)

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -pedantic -pthread -g -O0 -fprofile-arcs -ftest-coverage")

if (BUILD_LLVM)
# This was generated by llvm-config, should probably use a llvm provided cmake function for this
set(llvm_libs LLVMMCJIT LLVMExecutionEngine LLVMRuntimeDyld LLVMipo LLVMVectorize LLVMX86Disassembler LLVMX86AsmParser LLVMX86CodeGen LLVMX86Desc LLVMX86Info LLVMMCDisassembler LLVMX86AsmPrinter LLVMX86Utils LLVMSelectionDAG LLVMAsmPrinter LLVMCodeGen LLVMTarget LLVMScalarOpts LLVMProfileData LLVMObject LLVMBitReader LLVMInstCombine LLVMInstrumentation LLVMTransformUtils LLVMipa LLVMAnalysis LLVMCore LLVMMCParser LLVMMC LLVMSupport)
include_directories(${CMAKE_BINARY_DIR}/third_party/llvm/include/)
include_directories(third_party/llvm/include)
# Necessary because hobbes currently uses rtti
add_compile_options(-D__STDC_CONSTANT_MACROS -D__STDC_LIMIT_MACROS)
set(LLVM_ENABLE_RTTI 1)
else()
find_package(LLVM REQUIRED CONFIG)
include_directories(${LLVM_INCLUDE_DIRS})
add_definitions(${LLVM_DEFINITIONS})

message(STATUS "Found LLVM ${LLVM_PACKAGE_VERSION}")
message(STATUS "Using LLVMConfig.cmake in: ${LLVM_DIR}")

if (${LLVM_PACKAGE_VERSION} VERSION_LESS "3.6")
  set(jit_lib jit)
else()
  set(jit_lib mcjit)
endif()
llvm_map_components_to_libnames(llvm_libs x86asmparser x86codegen x86 ipo ${jit_lib})
endif()


include_directories(${CMAKE_BINARY_DIR}/third_party/llvm/include/)
include_directories(third_party/llvm/include)

# Necessary because hobbes currently uses rtti
add_compile_options(-D__STDC_CONSTANT_MACROS -D__STDC_LIMIT_MACROS)
set(LLVM_ENABLE_RTTI 1)
set(LLVM_ENABLE_EH 1)

include_directories(BEFORE
  ${HOBBES_MAIN_INCLUDE_DIR}
  ${HOBBES_INCLUDE_DIR}
  )

set(hobbes_libs hobbesdb hobbeseval hobbesevents hobbesipc hobbeslang hobbesparse hobbesread hobbesutil hobbesboot)

if(UNIX AND NOT APPLE)
   set(LINUX TRUE)
 endif()

if(APPLE)
  set(sys_libs pthread dl)
endif()
if(LINUX)
  set(sys_libs pthread dl rt)
endif()

enable_testing()
add_subdirectory("test")
add_subdirectory("third_party")
add_subdirectory("include")
add_subdirectory("lib")
add_subdirectory("bin")
add_subdirectory("examples")




